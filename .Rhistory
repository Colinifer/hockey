if (any("bbplot" %in%
rownames(installed.packages()) == FALSE)) {
library(devtools)
devtools::install_github('bbc/bbplot')
}
invisible(lapply(pkgs, library, character.only = TRUE))
rm(pkgs, installed_packages)
# Initialize Working Directory --------------------------------------------
source("../initR/init.R")
fx.setdir(proj_name)
# Create standard objects -------------------------------------------------
f.con <- "../initR/con.R"
source(f.con)
dbListTables(con)
dbDisconnect(con)
userYear <- substr(Sys.Date(), 1, 4)
userDate <- Sys.Date()
today <- format(Sys.Date(), "%Y-%d-%m")
source("EH_scrape_functions.R")
source("functions/add_to_table.R")
f.scrape <- paste0("data/", list.files(path = "data/", pattern = "pbp_scrape"))
View(fx.add_to_table)
games <- c(2019030151:2019030155)
pbp <- sc.scrape_pbp(games = games)
colnames(pbp$pbp_base)
faceoff.circle = function (x,y, thiscol="red") {
theta = seq(0,2*pi,length=300)
#outer.
polygon (x + 15*cos(theta),
y + 15*sin(theta),
lwd=2,
border=thiscol)
polygon (x + 1*cos(theta),
y + 1*sin(theta),
col=thiscol,
border=thiscol)
segments (c(x-0.75,x-0.75, x+0.75,x+0.75, x-0.75,x-0.75, x+0.75,x+0.75),
c(y-2,y-2, y-2,y-2, y+2,y+2,y+2,y+2),
c(x-0.75,x-3.75, x+0.75,x+3.75, x-0.75,x-3.75, x+0.75,x+3.75),
c(y-6,y-2, y-6,y-2, y+6,y+2,y+6,y+2),
col=thiscol, lwd=2)
dd <- (5+7/12)/2
segments (c(x-15, x-15, x+15, x+15),
c(y-dd, y+dd, y-dd, y+dd),
c(x-17, x-17, x+17, x+17),
c(y-dd, y+dd, y-dd, y+dd),
col=thiscol, lwd=2)
}
goal.crease = function (flip=1, fillcol="lightblue", thiscol="red") {
xseq = seq(-4,4,length=100)
polygon (c(-4, xseq, 4),
flip*c(89, 83+xseq^2/4^2*1.5, 89),
col=fillcol, border=thiscol)
}
rink.plot.blank = function (...) {
plot(c(42.6,-42.6), c(101,0), ty="n", ylim=c(101,25), xlim=c(-42.6, 42.6), ylab="", xlab="", axes=FALSE, ...)
}
rink.plot = function (fresh=TRUE, thiscol="red", ...) {
if (fresh) rink.plot.blank (...)
rect(-42.5, 25, 42.5, 26, col=4, border=4)
lines (c(-42.5,
-42.5 + 28 - 28*cos(seq(0,pi/2,length=20)),
42.5 - 28 + 28*cos(seq(pi/2,0,length=20)),
42.5),
c(15,
72 + 28*sin(seq(0,pi/2,length=20)),
72 + 28*sin(seq(pi/2,0,length=20)),
15),
col=1, lwd=2)
goal.line.extreme = 42.5 - 28 + sqrt(28^2 - (28-11)^2)
lines(goal.line.extreme*c(-1, 1), rep(89,2), col=thiscol, lwd=2)        #the goal line.
lines(c(-3,-3,3,3), c(90,92,92,90)-1, col=1, lwd=3)    #the goal net.
goal.crease(thiscol=thiscol)
segments(c(-11, 11), c(89,89), c(-14,14), c(100,100), col=thiscol, lwd=2)
faceoff.circle (-22, 69, thiscol)
faceoff.circle (22, 69, thiscol)
}
full.rink = function () {
theta = seq(0,2*pi,length=300)
par(mar=c(0,0,0,0))
plot(c(-42.6, 42.6), c(-101,101), ty="n", ylim=c(-101,101), xlim=c(-42.6, 42.6), ylab="", xlab="", axes=FALSE)
polygon (15*cos(theta), 15*sin(theta), lwd=2, border=4)
theta2 = seq (pi/2, 3*pi/2, length=300)
polygon (42.5 + 10*cos(theta2), 10*sin(theta2), lwd=2, border=2)
rect(-42.5, 25, 42.5, 26, col=4, border=4)
rect(-42.5, -25, 42.5, -26, col=4, border=4)
rect(-42.5, -0.5, 42.5, 0.5, col=2, border=2)
lines (c(-42.5,
-42.5 + 28 - 28*cos(seq(0,pi/2,length=20)),
42.5 - 28 + 28*cos(seq(pi/2,0,length=20)),
42.5),
c(15,
72 + 28*sin(seq(0,pi/2,length=20)),
72 + 28*sin(seq(pi/2,0,length=20)),
15),
col=1, lwd=2)
lines (c(-42.5,
-42.5 + 28 - 28*cos(seq(0,pi/2,length=20)),
42.5 - 28 + 28*cos(seq(pi/2,0,length=20)),
42.5),
c(15,
-72 - 28*sin(seq(0,pi/2,length=20)),
-72 - 28*sin(seq(pi/2,0,length=20)),
15),
col=1, lwd=2)
goal.line.extreme = 42.5 - 28 + sqrt(28^2 - (28-11)^2)
lines(goal.line.extreme*c(-1, 1), rep(89,2), col=2,lwd=2)        #the goal line.
lines(goal.line.extreme*c(-1, 1), rep(-89,2), col=2,lwd=2)        #the goal line.
lines(c(-3,-3,3,3), c(90,92,92,90)-1, col=1, lwd=3)    #the goal net.
lines(c(-3,-3,3,3), -(c(90,92,92,90)-1), col=1, lwd=3)    #the goal net.
goal.crease(); goal.crease(-1)
## traps.
segments(c(-11, 11, -11, 11), c(89,89,-89,-89),
c(-14,14,-14,14), c(100,100, -100,-100), col=2, lwd=2)
faceoff.circle (-22, 69)
faceoff.circle (22, 69)
faceoff.circle (-22, -69)
faceoff.circle (22, -69)
faceoff.dot = function (x,y) {
polygon (x + 1*cos(theta),
y + 1*sin(theta),
col=2,
border=2)
}
faceoff.dot (22,20); faceoff.dot (22,-20); faceoff.dot (-22,20); faceoff.dot (-22,-20);
}
full.rink()
colnames(pbp$pbp_base)
pbp$pbp_base$event_zone
pbp$pbp_base$event_zone %>% unique()
pbp$pbp_base$event_index
pbp$pbp_base$event_type
pbp$pbp_base$event_type %>% unique()
pbp$pbp_base %>% filter(event_type == "SHOT")
d <- ggplot(pbp$pbp_base %>% filter(event_type == "SHOT"), aes(coords_x, coords_y))
d + geom_hex()
install.packages(hexbin)
install.packages("hexbin")
library(hexbin)
d + geom_hex()
d
d + geom_hex(binwidth = c(.1, 500))
d + geom_hex(binwidth = c(.1, 80))
d + geom_hex(binwidth = c(1, 80))
d + geom_hex(binwidth = c(1, 1))
d + geom_hex(binwidth = c(5, 5))
d + geom_hex(binwidth = c(2.5, 2.5))
rink <- png::readPNG("plots/assets/full-rink-lateral.png")
d <- ggplot(pbp$pbp_base %>% filter(event_type == "SHOT"), aes(coords_x, coords_y)) + background_image(rink)
ggplot(pbp$pbp_base %>% filter(event_type == "SHOT"), aes(coords_x, coords_y)) +
background_image(rink) +
geom_hex(binwidth = c(2.5, 2.5))
d <- ggplot(pbp$pbp_base %>% filter(event_type == "SHOT"), aes(coords_x, coords_y)) +
annotation_custom(rasterGrob(rink,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_hex(binwidth = c(2.5, 2.5))
install.packages("pacman")
library(pacman)
d <- ggplot(pbp$pbp_base %>% filter(event_type == "SHOT"), aes(coords_x, coords_y)) +
annotation_custom(rasterGrob(rink,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_hex(binwidth = c(2.5, 2.5))
library(ggpubr)
ggplot(pbp$pbp_base %>% filter(event_type == "SHOT"), aes(coords_x, coords_y)) +
background_image(rink) +
geom_hex(binwidth = c(2.5, 2.5))
d <- ggplot(pbp$pbp_base %>% filter(event_type == "SHOT"), aes(coords_x, coords_y)) +
background_image(rink) +
geom_hex()
d
ggplot(pbp$pbp_base %>% filter(event_type == "SHOT"), aes(coords_x, coords_y)) +
background_image(rink) +
geom_hex(binwidth = c(2.5, 2.5))
pbp$pbp_base %>% filter(event_type == "SHOT" & event_type == "GOAL")
pbp$pbp_base %>% filter(event_type == "SHOT" && event_type == "GOAL")
pbp$pbp_base$event_type %>% unique()
pbp$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL")
ggplot(pbp$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL"), aes(coords_x, coords_y)) +
background_image(rink) +
geom_hex(binwidth = c(2.5, 2.5))
d <- ggplot(pbp$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL"), aes(coords_x, coords_y)) +
background_image(rink) +
geom_hex(binwidth = c(2.5, 2.5)) +
scale_fill_continuous(type = "viridis") +
theme_bw()
d
d <- ggplot(pbp$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL"), aes(coords_x, coords_y)) +
background_image(rink) +
geom_hex() +
scale_fill_continuous(type = "viridis") +
theme_bw()
d
gplot(pbp$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL"), aes(coords_x, coords_y)) +
background_image(rink) +
geom_hex(binwidth = c(2.5, 2.5), alpha(.5)) +
scale_fill_continuous(type = "viridis") +
theme_bw()
ggplot(pbp$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL"), aes(coords_x, coords_y)) +
background_image(rink) +
geom_hex(binwidth = c(2.5, 2.5), alpha(.5)) +
scale_fill_continuous(type = "viridis") +
theme_bw()
full.rink()
rink.plot.blank
seq(-4,4,length=100)
c(-4, xseq, 4)
flip*c(89, 83+xseq^2/4^2*1.5, 89)
pbp$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL" && coords_y > 35)
pbp$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL" && coords_y > 35) %>% view()
pbp$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL" && coords_y > 35 && coords_x < -50) %>% view()
pbp$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL" && event_zone == "Off") %>% view()
pbp$pbp_base %>% filter((event_type == "SHOT" | event_type == "GOAL") && event_zone == "Off") %>% view()
pbp$pbp_base %>% filter(event_type == "SHOT" && event_zone == "Off" | event_type == "GOAL" && event_zone == "Off") %>% view()
pbp$pbp_base %>% filter(event_type == c("SHOT", "GOAL") && event_zone == "Off") %>% view()
pbp$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL") %>% filter(event_zone == "Off") %>% view()
ggplot(pbp$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL") %>% filter(event_zone == "Off"), aes(coords_x, coords_y)) +
background_image(rink) +
geom_hex(binwidth = c(2.5, 2.5), alpha(.5)) +
scale_fill_continuous(type = "viridis") +
theme_bw()
ggplot(pbp$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL") %>% filter(event_zone == "Off"), aes(coords_x, coords_y)) +
background_image(rink) +
geom_hex(binwidth = c(2.5, 2.5)) +
scale_fill_continuous(type = "viridis") +
theme_bw()
pbp1 <- sc.scrape_pbp(games = 2019030125, live_scrape = T)
ggplot(pbp1$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL") %>% filter(event_zone == "Off"), aes(coords_x, coords_y)) +
background_image(rink) +
geom_hex(binwidth = c(2.5, 2.5)) +
scale_fill_continuous(type = "viridis") +
theme_bw()
View(pbp1)
pbp1$pbp_base
pbp1$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL"
)
pbp1$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL") %>% filter(event_zone == "Off")
ggplot(pbp1$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL") %>% filter(event_zone == "Off"), aes(coords_x, coords_y)) +
background_image(rink) +
geom_hex(binwidth = c(2.5, 2.5)) +
scale_fill_continuous(type = "viridis") +
theme_bw()
pbp1 <- sc.scrape_pbp(games = 2019030125, live_scrape = T)
ggplot(pbp1$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL") %>% filter(event_zone == "Off"), aes(coords_x, coords_y)) +
background_image(rink) +
geom_hex(binwidth = c(2.5, 2.5)) +
scale_fill_continuous(type = "viridis") +
theme_bw()
ggplot(pbp1$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL") %>% filter(event_zone == "Off"), aes(coords_x, coords_y)) +
background_image(rink) +
# geom_hex(binwidth = c(2.5, 2.5)) +
# scale_fill_continuous(type = "viridis") +
theme_bw()
ggplot(pbp1$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL") %>% filter(event_zone == "Off"), aes(coords_x, coords_y)) +
background_image(rink) +
geom_point()
# geom_hex(binwidth = c(2.5, 2.5)) +
# scale_fill_continuous(type = "viridis") +
theme_bw()
pbp1 <- sc.scrape_pbp(games = 2019030125, live_scrape = T)
ggplot(pbp1$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL") %>% filter(event_zone == "Off"), aes(coords_x, coords_y)) +
background_image(rink) +
geom_point()
# geom_hex(binwidth = c(2.5, 2.5)) +
# scale_fill_continuous(type = "viridis") +
theme_bw()
ggplot(pbp1$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL") %>% filter(event_zone == "Off"), aes(coords_x, coords_y)) +
background_image(rink) +
geom_point(aes(color=event_type))
pbp1 <- sc.scrape_pbp(games = 2019030125, live_scrape = T)
ggplot(pbp1$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL") %>% filter(event_zone == "Off"), aes(coords_x, coords_y)) +
background_image(rink) +
geom_point(aes(color=event_type))
# geom_hex(binwidth = c(2.5, 2.5)) +
# scale_fill_continuous(type = "viridis") +
theme_bw()
ggplot(pbp1$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL") %>% filter(event_zone == "Off"), aes(coords_x, coords_y)) +
background_image(rink) +
geom_point(aes(color=event_type), size = 2.5)
# geom_hex(binwidth = c(2.5, 2.5)) +
# scale_fill_continuous(type = "viridis") +
theme_bw()
pbp1$pbp_base$away_team[nrow(pbp1$pbp_base)]
pbp1$pbp_base$away_score[nrow(pbp1$pbp_base)]
paste(
pbp1$pbp_base$away_team[nrow(pbp1$pbp_base)],
"-",
pbp1$pbp_base$away_score[nrow(pbp1$pbp_base)],
"|",
pbp1$pbp_base$home_team[nrow(pbp1$pbp_base)],
"-",
pbp1$pbp_base$home_score[nrow(pbp1$pbp_base)]
)
pbp1 <- sc.scrape_pbp(games = 2019030115, live_scrape = T)
ggplot(pbp1$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL") %>% filter(event_zone == "Off"), aes(coords_x, coords_y)) +
background_image(rink) +
geom_point(aes(color=event_type), size = 2.5) +
# geom_hex(binwidth = c(2.5, 2.5)) +
# scale_fill_continuous(type = "viridis") +
theme_bw() +
geom_text(aes(label = rownames(df)),
size = 3.5)
proj_name <- "hockey"
# setwd("~/Documents/dev/hockey")
# devtools::install_github('bbc/bbplot')
# devtools::install_github('war-on-ice/nhlplot')
pkgs <- c(
"devtools",
"tidyverse",
"RMariaDB",
"DBI",
"readr",
"pander",
"na.tools",
"ggimage",
"devtools",
"teamcolors",
"glue",
"dplyr",
"RCurl",
"tictoc",
"animation",
"gt",
"DT",
"ggthemes",
"bbplot",
"ggtext",
"ggforce",
"ggridges",
"ggrepel",
"ggbeeswarm",
"extrafont",
"RCurl",
"xml2",
"rvest",
"jsonlite",
"foreach",
"lubridate",
"snakecase",
"nhlapi",
"nhlplot"
)
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(pkgs[!installed_packages])
}
if (any("bbplot" %in%
rownames(installed.packages()) == FALSE)) {
library(devtools)
devtools::install_github('bbc/bbplot')
}
invisible(lapply(pkgs, library, character.only = TRUE))
rm(pkgs, installed_packages)
# Initialize Working Directory --------------------------------------------
source("../initR/init.R")
fx.setdir(proj_name)
# Create standard objects -------------------------------------------------
f.con <- "../initR/con.R"
source(f.con)
dbListTables(con)
dbDisconnect(con)
userYear <- substr(Sys.Date(), 1, 4)
userDate <- Sys.Date()
today <- format(Sys.Date(), "%Y-%d-%m")
source("EH_scrape_functions.R")
source("functions/add_to_table.R")
f.scrape <- paste0("data/", list.files(path = "data/", pattern = "pbp_scrape"))
pbp1 <- sc.scrape_pbp(games = 2019030115, live_scrape = T)
ggplot(pbp1$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL") %>% filter(event_zone == "Off"), aes(coords_x, coords_y)) +
background_image(rink) +
geom_point(aes(color=event_type), size = 2.5) +
# geom_hex(binwidth = c(2.5, 2.5)) +
# scale_fill_continuous(type = "viridis") +
theme_bw() +
geom_text(aes(label = rownames(df)),
size = 3.5)
pkgs <- c(
"devtools",
"tidyverse",
"RMariaDB",
"DBI",
"readr",
"pander",
"na.tools",
"devtools",
"teamcolors",
"glue",
"dplyr",
"RCurl",
"tictoc",
"animation",
"gt",
"DT",
"ggimage",
"ggpubr",
"ggthemes",
"bbplot",
"ggtext",
"ggforce",
"ggridges",
"ggrepel",
"ggbeeswarm",
"extrafont",
"RCurl",
"xml2",
"rvest",
"jsonlite",
"foreach",
"lubridate",
"snakecase",
"nhlapi",
"nhlplot"
)
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(pkgs[!installed_packages])
}
if (any("bbplot" %in%
rownames(installed.packages()) == FALSE)) {
library(devtools)
devtools::install_github('bbc/bbplot')
}
invisible(lapply(pkgs, library, character.only = TRUE))
rm(pkgs, installed_packages)
pbp1 <- sc.scrape_pbp(games = 2019030115, live_scrape = T)
ggplot(pbp1$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL") %>% filter(event_zone == "Off"), aes(coords_x, coords_y)) +
background_image(rink) +
geom_point(aes(color=event_type), size = 2.5) +
# geom_hex(binwidth = c(2.5, 2.5)) +
# scale_fill_continuous(type = "viridis") +
theme_bw() +
geom_text(aes(label = rownames(df)),
size = 3.5)
pbp1$pbp_base$event_description
pbp1$pbp_base$event_description %>% filter(event_type == "GOAL")
filter(pbp1$pbp_base$event_description, event_type == "GOAL")
pbp1$pbp_base$event_type %>% unique()
pbp1$pbp_base %>% filter(event_type == "GOAL")
pbp1$pbp_base %>% filter(event_type == "GOAL") %>% filter(event_zone == "Off")
pbp1$pbp_base %>% filter(event_type == "GOAL") %>% filter(event_zone == "Off") %>% select(event_description)
pbp1$pbp_base %>% filter(event_type == "GOAL") %>% filter(event_zone == "Off") %>% select(event_player)
pbp1$pbp_base %>% colnames()
pbp1$pbp_base %>% filter(event_type == "GOAL") %>% filter(event_zone == "Off") %>% select(event_player_1)
pbp1$pbp_base %>% filter(event_type == "GOAL") %>% filter(event_zone == "Off") %>% select(event_player_1, event_player_2)
pbp1$pbp_base %>% filter(event_type == "GOAL") %>% filter(event_zone == "Off") %>% select(event_player_1, event_player_2, event_player_4)
pbp1$pbp_base %>% filter(event_type == "GOAL") %>% filter(event_zone == "Off") %>% select(event_player_1, event_player_2, game_strenght_data)
pbp1$pbp_base %>% filter(event_type == "GOAL") %>% filter(event_zone == "Off") %>% select(event_player_1, event_player_2, game_strenghh_data)
pbp1$pbp_base %>% filter(event_type == "GOAL") %>% filter(event_zone == "Off") %>% select(event_player_1, event_player_2, game_strength_data)
pbp1$pbp_base %>% filter(event_type == "GOAL") %>% filter(event_zone == "Off") %>% select(event_player_1, event_player_2, game_strength_state)
pbp1$pbp_base %>% arrange(event_index) %>% filter(event_type == "GOAL") %>% filter(event_zone == "Off") %>% select(event_player_1, event_player_2, game_strength_state)
pbp1$pbp_base %>% arrange(event_index) %>% filter(event_type == "GOAL") %>% filter(event_zone == "Off") %>% select(event_player_1, event_player_2, game_strength_state, event-index)
pbp1$pbp_base %>% arrange(event_index) %>% filter(event_type == "GOAL") %>% filter(event_zone == "Off") %>% select(event_player_1, event_player_2, game_strength_state, event_index)
pbp1$pbp_base %>% arrange(event_index) %>% filter(event_type == "GOAL") %>% filter(event_zone == "Off") %>% select(event_player_1, event_player_2, game_strength_state, event_index, game_clock)
pbp1$pbp_base %>% colnames()
pbp1$pbp_base %>% colnames()
pbp1$pbp_base %>% arrange(event_index) %>% filter(event_type == "GOAL") %>% filter(event_zone == "Off") %>% select(event_player_1, event_player_2, game_strength_state, game_seconds)
ggplot(pbp1$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL") %>% filter(event_zone == "Off"), aes(coords_x, coords_y)) +
background_image(rink) +
geom_point(aes(color=event_type), size = 2.5) +
# geom_hex(binwidth = c(2.5, 2.5)) +
# scale_fill_continuous(type = "viridis") +
theme_bw() +
geom_text(data = pbp1$pbp_base %>% filter(event_type == "GOAL") %>% filter(event_zone == "Off"), aes(label = pbp1$pbp_base %>% arrange(event_index) %>% filter(event_type == "GOAL") %>% filter(event_zone == "Off") %>% select(event_player_1, event_player_2, game_strength_state, game_seconds)),
size = 3.5) +
geom_text_repel(aes(label = rownames(df)),
size = 3.5)
ggplot(pbp1$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL") %>% filter(event_zone == "Off"), aes(coords_x, coords_y)) +
background_image(rink) +
geom_point(aes(color=event_type), size = 2.5) +
# geom_hex(binwidth = c(2.5, 2.5)) +
# scale_fill_continuous(type = "viridis") +
theme_bw() +
geom_text(data = pbp1$pbp_base %>% filter(event_type == "GOAL") %>% filter(event_zone == "Off"), aes(label = pbp1),
size = 3.5) +
geom_text_repel(aes(label = rownames(df)),
size = 3.5)
pbp1$pbp_base %>% filter(event_type == "GOAL") %>% filter(event_zone == "Off")
ggplot(pbp1$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL") %>% filter(event_zone == "Off"), aes(coords_x, coords_y)) +
background_image(rink) +
geom_point(aes(color=event_type), size = 2.5) +
# geom_hex(binwidth = c(2.5, 2.5)) +
# scale_fill_continuous(type = "viridis") +
theme_bw() +
geom_text(aes(label = pbp1$pbp_base %>% filter(event_type == "GOAL")),
size = 3.5) +
geom_text_repel()
ggplot(pbp1$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL") %>% filter(event_zone == "Off"), aes(coords_x, coords_y)) +
background_image(rink) +
geom_point(aes(color=event_type), size = 2.5) +
# geom_hex(binwidth = c(2.5, 2.5)) +
# scale_fill_continuous(type = "viridis") +
theme_bw() +
geom_text_repel(aes(label = pbp1$pbp_base %>% filter(event_type == "GOAL")))
rownames(pbp1)
ggplot(pbp1$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL") %>% filter(event_zone == "Off"), aes(coords_x, coords_y)) +
background_image(rink) +
geom_point(aes(color=event_type), size = 2.5) +
# geom_hex(binwidth = c(2.5, 2.5)) +
# scale_fill_continuous(type = "viridis") +
theme_bw() +
geom_text_repel(aes(label = pbp1$pbp_base$event_player_1))
ggplot(pbp1$pbp_base %>% filter(event_type == "SHOT" | event_type == "GOAL") %>% filter(event_zone == "Off"), aes(coords_x, coords_y)) +
background_image(rink) +
geom_point(aes(color=event_type), size = 2.5) +
# geom_hex(binwidth = c(2.5, 2.5)) +
# scale_fill_continuous(type = "viridis") +
theme_bw()
