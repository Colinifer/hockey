"rvest",
"jsonlite",
"foreach",
"lubridate",
"snakecase",
"nhlapi"
)
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(pkgs[!installed_packages])
} else_if (any("bbplot" %in%
rownames(installed.packages()) == FALSE)) {
library(devtools)
devtools::install_github('bbc/bbplot')
}
invisible(lapply(pkgs, library, character.only = TRUE))
rm(pkgs, installed_packages)
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(pkgs[!installed_packages])
}
if (any("bbplot" %in%
rownames(installed.packages()) == FALSE)) {
library(devtools)
devtools::install_github('bbc/bbplot')
}
invisible(lapply(pkgs, library, character.only = TRUE))
rm(pkgs, installed_packages)
proj_name <- "hockey"
pkgs <- c(
"devtools",
"tidyverse",
"RMariaDB",
"DBI",
"readr",
"pander",
"na.tools",
"ggimage",
"devtools",
"teamcolors",
"glue",
"dplyr",
"RCurl",
"tictoc",
"animation",
"gt",
"DT",
"ggthemes",
"bbplot",
"ggtext",
"ggforce",
"ggridges",
"ggrepel",
"ggbeeswarm",
"extrafont",
"RCurl",
"xml2",
"rvest",
"jsonlite",
"foreach",
"lubridate",
"snakecase",
"nhlapi"
)
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(pkgs[!installed_packages])
}
if (any("bbplot" %in%
rownames(installed.packages()) == FALSE)) {
library(devtools)
devtools::install_github('bbc/bbplot')
}
invisible(lapply(pkgs, library, character.only = TRUE))
rm(pkgs, installed_packages)
unlink('~/Documents/dev/football/inspo/guga:caseb/beginners_guide_cache', recursive = TRUE)
unlink('~/Documents/dev/football/inspo/guga:caseb/beginners_guide_cache', recursive = TRUE)
library(yaml)
install.packages("yaml")
install.packages("rmarkdown")
install.packages("knitr")
install.packages("knitr")
proj_name <- "hockey"
# devtools::install_github('bbc/bbplot')
pkgs <- c(
"devtools",
"tidyverse",
"RMariaDB",
"DBI",
"readr",
"pander",
"na.tools",
"ggimage",
"devtools",
"teamcolors",
"glue",
"dplyr",
"RCurl",
"tictoc",
"animation",
"gt",
"DT",
"ggthemes",
"bbplot",
"ggtext",
"ggforce",
"ggridges",
"ggrepel",
"ggbeeswarm",
"extrafont",
"RCurl",
"xml2",
"rvest",
"jsonlite",
"foreach",
"lubridate",
"snakecase",
"nhlapi"
)
installed_packages <- pkgs %in%
rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(pkgs[!installed_packages])
}
invisible(lapply(pkgs, library, character.only = TRUE))
rm(pkgs, installed_packages)
# Initialize Working Directory --------------------------------------------
source("../initR/init.R")
fx.setdir(proj_name)
?url
nhl_api <- "https://statsapi.web.nhl.com/api/v1/game/2019030062/boxscore"
game <- "game"
id <- 2019030062
boxscore <- "boxscore"
glue::glue(nhl_api, game, id, boxscore) %>% path.expand()
glue::glue(nhl_api, game, id, boxscore) %>% path.expand()
game <- "game/"
id <- 2019030062
boxscore <- "/boxscore"
glue::glue(nhl_api, game, id, boxscore) %>% path.expand()
nhl_api <- "https://statsapi.web.nhl.com/api/v1/"
game <- "game"
id <- 2019030062
boxscore <- "boxscore"
glue::glue(nhl_api, "/", game, "/", id, "/", boxscore)
nhl_api <- "https://statsapi.web.nhl.com/api/v1"
game <- "game"
id <- 2019030062
boxscore <- "boxscore"
glue::glue(nhl_api, "/", game, "/", id, "/", boxscore)
glue::glue(nhl_api, "/", game, "/", id, "/", boxscore) %>% fromJSON()
game_boxscore <- glue::glue(nhl_api, "/", game, "/", id, "/", boxscore) %>% fromJSON()
View(game_boxscore)
game_boxscore <- glue::glue(nhl_api, "/", game, "/", id, "/", boxscore) %>% fromJSON(flatten = T)
View(game_boxscore)
game_boxscore[[1]]
game_boxscore[[2]]
view(game_boxscore[[2]])
class(game_boxscore[[2]])
flatten(game_boxscore)
flatten(game_boxscore[[2]])
library(data.table)
rbindlist(game_boxscore$teams, fill = T, idcol = "id")
rbindlist(game_boxscore$teams$away, fill = T, idcol = "id")
rbindlist(game_boxscore$teams$away, fill = T)
rbindlist(game_boxscore$teams$away$players, fill = T)
flatten(game_boxscore$teams$away$players)
as.data.frame(game_boxscore$teams$away$players)
unnest_longer(game_boxscore$teams$away$players)
unnest_longer(game_boxscore$teams$away$players, players)
unnest_longer(game_boxscore$teams$away, players)
game_boxscore$teams$away$skaters
unnest_longer(game_boxscore$teams$away, skaters)
unnest_wider(game_boxscore$teams$away, skaters)
unnest_wider(game_boxscore$teams$away$, players)
unnest_wider(game_boxscore$teams$away, players)
unnest_wider(game_boxscore$teams$away$players, players)
game_boxscore[[2]] %>% unnest()
game_boxscore[[2]] %>% unnest(cols = c(away, home))
game_boxscore[[2]] %>% unnest_wider(cols = c(away, home))
game_boxscore[[2]] %>% unnest_wider(cols = c("away", 'home'))
game_boxscore[[2]] %>% unnest_longer(cols = c(away, home))
game_boxscore[[2]] %>% unnest_auto()
game_boxscore[[2]]
game_boxscore[[2]] %>% names()
game_boxscore[[2]] %>% unnest_auto(col = c(away, home))
game_boxscore[[2]] %>% unnest_auto(col = away
)
game_boxscore %>% unnest_wider(players)
game_boxscore %>% names()
game_boxscore %>% select(teams)
game_boxscore %>% unnest_wider(teams)
game_boxscore %>% tibble()
game_boxscore %>% unnest_wider(teams)
game_boxscore[[2]] %>% tibble()
game_boxscore[[2]] %>% tibble() %>% names()
game_boxscore[[2]] %>% names()
game_boxscore[[2]]$away %>% tibble() %>% names()
game_boxscore[[2]]$away %>% names()
game_boxscore[[2]] %>% hoist(players)
game_boxscore[[2]]$away %>% hoist(players)
game_boxscore[[2]] %>% hoist(.simplify = T)
game_boxscore[[2]] %>% hoist(.col = away, .simplify = T)
game_boxscore[[2]] %>% hoist(.col = c(away, home), .simplify = T)
tibble(player = game_boxscore[[2]])
tibble(player_score = game_boxscore[[2]])
tibble(player_score = game_boxscore[[2]]) %>% unnest_wider(user)
tibble(player_score = game_boxscore[[2]]) %>% unnest_wider(player_score)
game_boxscore %>% tibble(player_score = game_boxscore[[2]])
player_boxscore %>% tibble(player_score = game_boxscore[[2]])
player_boxscore <-  tibble(player_score = game_boxscore[[2]])
View(player_boxscore)
player_boxscore %>% unnest_wider(player_score)
player_boxscore %>% hoist(player_score,
team = "team",
players = "players",
goalies = "goalies",
skaters = "skaers",
)
player_boxscore %>% hoist(player_score,
team = "team",
players = "players",
goalies = "goalies",
skaters = "skaers",
) %>% flatten()
player_boxscore %>% hoist(player_score,
team = "team",
players = "players",
goalies = "goalies",
skaters = "skaers",
) %>% unnest(cols = c(team, players, goalies skaters, player_score))
player_boxscore %>% hoist(player_score,
team = "team",
players = "players",
goalies = "goalies",
skaters = "skaters",
) %>% unnest(cols = c(team, players, goalies, skaters, player_score))
source('~/Documents/dev/hockey/recatngle.R')
source('~/Documents/dev/hockey/recatngle.R')
source('~/Documents/dev/hockey/rectangle.R')
player_boxscore<- player_boxscore %>% hoist(player_score,
team = "team",
players = "players",
goalies = "goalies",
skaters = "skaters",
) %>% unnest(cols = c(team, players, goalies, skaters, player_score))
player_boxscore<- player_boxscore %>% hoist(player_score,
team = "team",
players = "players",
goalies = "goalies",
skaters = "skaters",
)
player_boxscore$players %>% unnest_wider()
player_boxscore$players %>% unnest_wider(player)
player_boxscore$players %>% unnest_wider(skater)
View(player_boxscore)
View(player_boxscore[[1]][[1]])
source('~/Documents/dev/hockey/rectangle.R')
player_boxscore <-  tibble(player_score = game_boxscore[[2]])
player_boxscore %>% unnest_wider(player_score)
player_boxscore %>% hoist(player_score,
team = "team",
players = "players",
goalies = "goalies",
skaters = "skaters",
)
game_boxscore %>% content()
library(repurrrsive)
install.packages("repurrrsive")
library(data.table)
library(httr)
library(repurrrsive)
library(tidyverse)
game_boxscore %>% content()
game_boxscore %>% content() %>% as.tibble()
game_boxscore <- glue::glue(nhl_api, "/", game, "/", id, "/", boxscore) %>% fromJSON(flatten = T)
game_boxscore %>% content() %>% as.tibble()
str(game_boxscore)
content(glue::glue(nhl_api, "/", game, "/", id, "/", boxscore), as = "parsed", type = "application/json")
content(GET(glue::glue(nhl_api, "/", game, "/", id, "/", boxscore)), as = "parsed", type = "application/json")
response_json <- content(GET(glue::glue(nhl_api, "/", game, "/", id, "/", boxscore)), as = "parsed", type = "application/json")
View(response_json)
install.packages("listviewer")
library(listviewer)
tibble(player_score = game_boxscore)
player_boxscore <-  tibble(player_score = game_boxscore)
View(player_boxscore)
unnest_wider(player_boxscore)
player_boxscore %>% unnest_wider(player_boxscore$player_score)
View(player_boxscore)
player_boxscore %>% unnest_wider(player_boxscore, player_score)
player_boxscore$player_score[[1]]
player_boxscore$player_score[[2]]
player_boxscore$player_score[[2]] %>% names()
player_boxscore %>%
unnest_wider(player)
player_boxscore$player_score[[1]] %>%
unnest_wider(player)
enframe(unlist(response_json))
response_json %>%
unlist() %>%
enframe() %>%
separate(name, into = c(paste0("x", 1:10)))
response_json %>%
unlist() %>%
enframe() %>%
separate(name, into = c(paste0("x", 1:10))) %>%
view()
rgx_split <- "\\."
n_cols_max <-
data_raw %>%
pull(name) %>%
str_split(rgx_split) %>%
map_dbl(~length(.)) %>%
max()
n_cols_max
data_raw <- response_json %>%
unlist() %>%
enframe() %>%
separate(name, into = c(paste0("x", 1:10))) %>%
view()
rgx_split <- "\\."
n_cols_max <-
data_raw %>%
pull(name) %>%
str_split(rgx_split) %>%
map_dbl(~length(.)) %>%
max()
n_cols_max
data_raw <- response_json %>%
unlist() %>%
enframe()
data_raw %>%
separate(name, into = c(paste0("x", 1:10))) %>%
view()
rgx_split <- "\\."
n_cols_max <-
data_raw %>%
pull(name) %>%
str_split(rgx_split) %>%
map_dbl(~length(.)) %>%
max()
n_cols_max
nms_sep <- paste0("name", 1:n_cols_max)
data_sep <- data_raw %>%
separate(name, into = nms_sep, sep = rgx_split, fill = "right")
View(data_sep)
View(data_sep)
View(data_sep)
df_json1 <- as_tibble(response_json)
list_json1 <- map_if(response_json, is.data.frame, list)
df_json1 <- as_tibble(responlist_json1)
df_json1 <- as_tibble(list_json1)
list_json1 <- map_if(response_json, is.data.frame, list)
df_json1 <- as_tibble(list_json1)
glimpse(list_json1)
response_json %>%
fromJSON() %>%
map_if(is.data.frame, list) %>%
as_tibble() %>%
unnest() %>%
unnest()
response_json %>%
map_if(is.data.frame, list) %>%
as_tibble() %>%
unnest() %>%
unnest()
response_json %>%
map_if(is.data.frame, list) %>%
as_tibble() %>%
unnest()
game_boxscore %>%
map_if(is.data.frame, list) %>%
as_tibble() %>%
unnest() %>%
unnest()
game_boxscore %>%
map_if(is.data.frame, list) %>%
as_tibble() %>%
unnest(cols = c(teams, officials)) %>%
unnest()
game_boxscore %>%
map_if(is.data.frame, list) %>%
as_tibble() %>%
unnest(cols = c(teams, officials))
game_boxscore %>%
map_if(is.data.frame, list) %>%
as_tibble() %>%
unnest(teams) %>%
unnest(officials)
df.game_boxscore <- game_boxscore %>%
map_if(is.data.frame, list) %>%
as_tibble() %>%
unnest(teams) %>%
unnest(officials)
View(df.game_boxscore)
df.game_boxscore <- game_boxscore %>%
map_if(is.data.frame, list) %>%
as_tibble() %>%
unnest(teams) %>%
unnest(officials) %>%
unnest_wider(teams)
View(df.game_boxscore)
df.game_boxscore <- game_boxscore %>%
map_if(is.data.frame, list) %>%
as_tibble() %>%
unnest(teams) %>%
unnest(officials) %>%
unnest_longer(teams)
df.game_boxscore <- game_boxscore %>%
map_if(is.data.frame, list) %>%
as_tibble() %>%
unnest(teams) %>%
unnest(officials)
View(df.game_boxscore)
View(df.game_boxscore[[2]][[7]])
View(df.game_boxscore[[2]][[7]])
View(df.game_boxscore[[2]][[1]])
View(df.game_boxscore[[2]][[1]])
View(df.game_boxscore[[2]][[1]])
View(df.game_boxscore[[2]][[1]])
View(df.game_boxscore[[2]][[79]])
View(df.game_boxscore[[2]][[79]])
View(df.game_boxscore[[2]][[79]])
View(df.game_boxscore[[2]][[79]])
View(df.game_boxscore[[2]][[79]])
View(df.game_boxscore[[2]][[79]])
df.game_boxscore <- game_boxscore %>%
map_if(is.data.frame, list) %>%
as_tibble() %>%
unnest(teams) %>%
unnest_longer(teams)
df.game_boxscore <- game_boxscore %>%
map_if(is.data.frame, list) %>%
as_tibble() %>%
unnest(teams)
View(df.game_boxscore)
View(df.game_boxscore)
df.game_boxscore <- game_boxscore %>%
map_if(is.data.frame, list) %>%
as_tibble() %>%
unnest(teams) %>%
unnest_longer(teams)
df.game_boxscore <- game_boxscore %>%
map_if(is.data.frame, list) %>%
as_tibble() %>%
unnest(teams) %>%
unnest_wider(teams)
df.game_boxscore <- game_boxscore[[2]] %>%
map_if(is.data.frame, list) %>%
as_tibble() %>%
unnest(teams)
df.game_boxscore <- game_boxscore[[2]] %>%
map_if(is.data.frame, list) %>%
as_tibble() %>%
unnest(c(away, home))
df.game_boxscore_away <- game_boxscore[[2]]$away %>%
map_if(is.data.frame, list) %>%
as_tibble()
df.game_boxscore_away <- game_boxscore[[2]]$away$ %>%
map_if(is.data.frame, list) %>%
as_tibble() %>%
unnest_longer(players)
df.game_boxscore_away <- game_boxscore[[2]]$away %>%
map_if(is.data.frame, list) %>%
as_tibble() %>%
unnest_longer(players)
df.game_boxscore_away <- game_boxscore[[2]]$away %>%
map_if(is.data.frame, list) %>%
as_tibble() %>%
unnest(players)
df.game_boxscore_away <- game_boxscore[[2]]$away %>%
map_if(is.data.frame, list) %>%
as_tibble() %>%
unnest(team) %>%
unnest(players)
df.game_boxscore_away <- game_boxscore[[2]]$away$ %>%
map_if(is.data.frame, list) %>%
as_tibble() %>%
unnest(team) %>%
unnest(players) %>%
unnest(penaltybox)
df.game_boxscore_away <- game_boxscore[[2]]$away %>%
map_if(is.data.frame, list) %>%
as_tibble() %>%
unnest(team) %>%
unnest(players) %>%
unnest(penaltybox)
df.game_boxscore_away <- game_boxscore[[2]]$away %>%
map_if(is.data.frame, list) %>%
as_tibble() %>%
unnest(team) %>%
hoist(players)
df.game_boxscore_away <- game_boxscore[[2]]$away %>%
map_if(is.data.frame, list) %>%
as_tibble() %>%
hoist(players)
df.game_boxscore_away <- game_boxscore[[2]]$away %>%
map_if(is.data.frame, list) %>%
as_tibble() %>%
unnest(players)
df.game_boxscore_away <- game_boxscore[[2]]$away %>%
map_if(is.data.frame, list) %>%
as_tibble() %>%
unnest(players)
game_boxscore[[2]]$away %>%
map_if(is.data.frame, list) %>%
as_tibble()
source('~/Documents/dev/hockey/rectangle.R')
